<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="NOI-PW03VFY0" failures="0" tests="11" name="highlineWarren.test.HighLineWarrenDemoTest" time="4.113" errors="1" timestamp="2025-03-25T16:26:44 IST" skipped="10">
  <testcase classname="highlineWarren.test.HighLineWarrenDemoTest" name="setupDriver" time="4.113">
    <error message="Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no &#039;moz:firefoxOptions.binary&#039; capability provided, and no binary flag set on the command line 
Host info: host: &#039;NOI-PW03VFY0&#039;, ip: &#039;192.168.29.134&#039;
Build info: version: &#039;4.24.0&#039;, revision: &#039;748ffc9bc3&#039;
System info: os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;23&#039;
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {prefs: {remote.active-protocols: 3}}}]}]" type="org.openqa.selenium.SessionNotCreatedException">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no 'moz:firefoxOptions.binary' capability provided, and no binary flag set on the command line 
Host info: host: 'NOI-PW03VFY0', ip: '192.168.29.134'
Build info: version: '4.24.0', revision: '748ffc9bc3'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {prefs: {remote.active-protocols: 3}}}]}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:162)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:155)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:150)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:132)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:127)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:112)
at base.BaseTest.setupDriver(BaseTest.java:77)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1575)
]]>
    </error>
  </testcase> <!-- setupDriver -->
  <system-out/>
  <testcase classname="highlineWarren.test.HighLineWarrenDemoTest" name="highLineWarrenTitleValidation" time="0.000">
    <skipped/>
  </testcase> <!-- highLineWarrenTitleValidation -->
  <system-out/>
  <testcase classname="highlineWarren.test.HighLineWarrenDemoTest" name="verifyHighLineWarrenLogo" time="0.000">
    <skipped/>
  </testcase> <!-- verifyHighLineWarrenLogo -->
  <system-out/>
  <testcase classname="highlineWarren.test.HighLineWarrenDemoTest" name="verifyHighLineWarrenUrl" time="0.000">
    <skipped/>
  </testcase> <!-- verifyHighLineWarrenUrl -->
  <system-out/>
  <testcase classname="highlineWarren.test.HighLineWarrenDemoTest" name="verifyBrowserByCategoryIsClickable" time="0.000">
    <skipped/>
  </testcase> <!-- verifyBrowserByCategoryIsClickable -->
  <system-out/>
  <testcase classname="highlineWarren.test.HighLineWarrenDemoTest" name="verifyAllCategoryAreScrollableAndCountAllCategories" time="0.000">
    <skipped/>
  </testcase> <!-- verifyAllCategoryAreScrollableAndCountAllCategories -->
  <system-out/>
  <testcase classname="highlineWarren.test.HighLineWarrenDemoTest" name="verifyFirstCategoryIsClickableAndFunctional" time="0.000">
    <skipped/>
  </testcase> <!-- verifyFirstCategoryIsClickableAndFunctional -->
  <system-out/>
  <testcase classname="highlineWarren.test.HighLineWarrenDemoTest" name="verifySecondCategory" time="0.000">
    <skipped/>
  </testcase> <!-- verifySecondCategory -->
  <system-out/>
  <testcase classname="highlineWarren.test.HighLineWarrenDemoTest" name="verifySecondCategoryFunctionalityWithBrands" time="0.000">
    <skipped/>
  </testcase> <!-- verifySecondCategoryFunctionalityWithBrands -->
  <system-out/>
  <testcase classname="highlineWarren.test.HighLineWarrenDemoTest" name="verifySearchFunctionalityIsClickable" time="0.000">
    <skipped/>
  </testcase> <!-- verifySearchFunctionalityIsClickable -->
  <system-out/>
  <testcase classname="highlineWarren.test.HighLineWarrenDemoTest" name="verifySearchFunctionalityWithBrands" time="0.000">
    <skipped/>
  </testcase> <!-- verifySearchFunctionalityWithBrands -->
  <system-out/>
</testsuite> <!-- highlineWarren.test.HighLineWarrenDemoTest -->
